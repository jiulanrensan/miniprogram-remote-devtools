{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["var __TEMP__ = require('@miniprogram-remote-devtools/common');var overrideApi = __TEMP__['overrideApi'];var Runtime$1 = __TEMP__['Runtime'];\n\nconst defaultOptions = {\n    url: '',\n    timeout: 15000\n};\nclass ClientSocket {\n    constructor(options) {\n        this.connectSocket = wx.connectSocket;\n        this.socket = this.connectSocket(Object.assign(Object.assign({}, defaultOptions), options));\n        this.socket.onClose(() => {\n            wx.showModal({\n                title: '提示',\n                content: '调试已断开'\n            });\n        });\n        this.socket.onError((errMsg) => {\n            console.log('socket errMsg', errMsg);\n        });\n        this.socket.onOpen((res) => {\n            console.log('socket onOpen');\n        });\n    }\n    send(data) {\n        this.socket.send({\n            data\n        });\n    }\n    close(option) {\n        this.socket.close(option);\n    }\n    onMessage(callback) {\n        this.socket.onMessage(callback);\n    }\n}\n\n/**\n * wechat-miniprogram type 只有这几种api\n */\nconst { log, info, warn, error, debug, group, groupEnd } = console;\nconst consoleAPICalledTypeMap = new Map([\n    [log, 'log'],\n    [debug, 'debug'],\n    [info, 'info'],\n    [error, 'error'],\n    [warn, 'warning'],\n    [group, 'startGroup'],\n    [groupEnd, 'endGroup']\n]);\n\nfunction overrideConsole(send) {\n    [log, info, warn, error, debug].forEach((fn) => {\n        function overrideFunc(...args) {\n            send({\n                method: Runtime$1.events.consoleAPICalled,\n                params: {\n                    type: consoleAPICalledTypeMap.get(fn),\n                    args: handleArgs(args),\n                    executionContextId: 1,\n                    stackTrace: {\n                        callFrames: []\n                    },\n                    timestamp: new Date().getTime()\n                }\n            });\n        }\n        overrideApi({\n            target: console,\n            apiKey: fn.name,\n            overrideFunc\n        });\n    });\n}\nfunction handleArgs(args) {\n    return args.map((arg) => {\n        return {\n            type: typeof arg,\n            value: arg\n        };\n    });\n}\n\nclass Base {\n    constructor(options) {\n        const { socket } = options;\n        this.socket = socket;\n        this.enable();\n        this.init();\n    }\n    init() { }\n    enable() { }\n    send(data) {\n        this.socket.send(JSON.stringify(data));\n    }\n}\n\n/**\n * Runtime\n * consoleAPICalled\n * exceptionThrown\n */\nclass Runtime extends Base {\n    init() {\n        // 绑定this\n        overrideConsole(this.send.bind(this));\n    }\n}\n\nclass MiniprogramRemoteDevtoolSDK {\n    init(options) {\n        const socket = new ClientSocket(options);\n        [Runtime].forEach((domain) => {\n            new domain({\n                socket\n            });\n        });\n    }\n}\n\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });Object.defineProperty(exports, 'default', { enumerable: true, configurable: true, get: function() { return MiniprogramRemoteDevtoolSDK; } });\n//# sourceMappingURL=index.js.map\n"]}